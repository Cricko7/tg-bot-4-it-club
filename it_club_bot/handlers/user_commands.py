from aiogram.dispatcher.router import Router
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command, Filter
from aiogram.types import Message
from aiogram import types
from handlers.admin import get_admin_keyboard, ADMIN_IDS
from handlers.main_keyboard import get_main_keyboard
from services.db import AsyncDB
from aiogram.types import BotCommand
from aiogram import Bot
import os
from dotenv import load_dotenv

ADMIN_IDS = list(map(int, os.getenv("ADMIN_IDS", "").split(",")))  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ø–∏—Å–æ–∫ int
router = Router()
#admin_filter = AdminFilter(admin_ids=ADMIN_IDS)
load_dotenv()
# –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
commands_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="/create_team"), KeyboardButton(text="/join_team")],
        [KeyboardButton(text="/rename_team"), KeyboardButton(text="/delete_team")],
    ],
    resize_keyboard=True,
    one_time_keyboard=False
)

async def set_user_commands(bot: Bot):
    commands = [
    BotCommand(command="start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
    BotCommand(command="help", description="–ü–æ–º–æ—â—å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"),
    BotCommand(command="register", description="–ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ"),
    BotCommand(command="mydata", description="–ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –¥–∞–Ω–Ω—ã–µ"),
    BotCommand(command="list_teams", description="–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è..)"),
    BotCommand(command="list_events", description="–ü—Ä–æ—Å–º–æ—Ç—Ä –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π (–¥–ª—è —É—á–∞—Å—Ç–∏—è)"),
    BotCommand(command="create_team", description="–°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É"),
    BotCommand(command="join_team", description="–í—Å—Ç—É–ø–∏—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É"),
    BotCommand(command="rename_team", description="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É"),
    BotCommand(command="delete_team", description="–£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É"),
    BotCommand(command="my_events", description="–ú–æ–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"),
    BotCommand(command="join_event", description="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ"),
    BotCommand(command="cancel_application", description="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É (–æ—Ç–∫–∞–∑ –æ—Ç —É—á–∞—Å—Ç–∏—è)"),
    # –ö–æ–º–∞–Ω–¥—ã, –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ –∫–∞–∫ –∞–¥–º–∏–Ω—Å–∫–∏–µ, –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å–µ–º
    BotCommand(command="adminpanel", description="–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"),
    BotCommand(command="export_users_csv", description="–≠–∫—Å–ø–æ—Ä—Ç —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"),
    BotCommand(command="export_teams_xlsx", description="–≠–∫—Å–ø–æ—Ä—Ç —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥"),
    BotCommand(command="export_event", description="–≠–∫—Å–ø–æ—Ä—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"),
    BotCommand(command="remove_user", description="–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
    BotCommand(command="delete_event", description="–£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ"),
    BotCommand(command="create_event", description="–°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ"),
    BotCommand(command="check_applications", description="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫–∏ (–Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–ª—É–± !)"),
    BotCommand(command="invite_requests", description="–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ (–∫–æ–≥–¥–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –∫–æ–≥–æ-—Ç–æ –≤ –∫–æ–º–∞–Ω–¥—É)"),
    BotCommand(command="manage_requests", description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏ (–Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥—É)"),
    ]
    await bot.set_my_commands(commands)

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ñ—É–Ω–∫—Ü–∏—è–º --> /help\n–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π /register.\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É:",
        reply_markup=keyboard
    )

# –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ...

@router.message(Command("help"))
async def cmd_help(message: Message):
    help_text = (
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "/register ‚Äî –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\n"
        "/mydata ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞—à–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n"
        "\n –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥. –∫–æ–º–∞–Ω–¥—ã:\n\n"
        "/create_team ‚Äî —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É \n"
        "/rename_team ‚Äî –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É \n"
        "/join_team ‚Äî –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–∞–Ω–¥–µ \n"
        "/users_without_team ‚Äî –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã \n"
        "/team_members ‚Äî –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥–µ \n"
        ""
        ""
        ""
        ""
        ""
        ""
        ""
        ""
        ""
        ""
        ""
    )
    await message.answer(help_text)

admin_router = Router()
@admin_router.message(Command("help_adm"), admin_filter)
async def help_admin(message: Message):
    help_text = (
        "üõ† –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n"
        "/adminpanel - –û—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å\n"
        "/export_users_csv - –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ CSV\n"
        "/export_teams_xlsx - –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–º–∞–Ω–¥ –≤ XLSX\n"
        "/remove_user <id> - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        "/delete_event <id> - –£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ\n"
        "/create_event - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ\n"
        "/check_applications - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫–∏\n"
        "/invite_requests - –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ\n"
        "/manage_requests - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏\n"
        "/help_adm - –≠—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
    )
    await message.answer(help_text)

@router.message(Command("cancel_application"))
async def cancel_application(message: types.Message, db: AsyncDB):
    user_id = message.from_user.id
    async with db.conn.execute("SELECT status FROM registrations WHERE user_id = ?", (user_id,)) as cursor:
        row = await cursor.fetchone()
    if not row:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞—è–≤–∫–∏.")
        return
    status = row[0]
    if status == "approved":
        await message.answer("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É–∂–µ –æ–¥–æ–±—Ä–µ–Ω–∞, –æ—Ç–º–µ–Ω–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.")
        return
    if status == "cancelled":
        await message.answer("–í—ã —É–∂–µ –æ—Ç–º–µ–Ω—è–ª–∏ –∑–∞—è–≤–∫—É.")
        return
    await db.conn.execute("UPDATE registrations SET status = 'cancelled' WHERE user_id = ?", (user_id,))
    await db.conn.commit()
    await message.answer("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –ø–æ–∑–∂–µ.")

@router.message(Command("team_members"))
async def team_members_handler(message: types.Message, db: AsyncDB):
    user_id = message.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    team = await db.get_user_team(user_id)
    if not team:
        await message.answer("–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–æ–º–∞–Ω–¥–µ.")
        return
    
    team_id = team['team_id']
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã
    query = """
        SELECT r.user_id, r.name
        FROM registrations r
        JOIN teams_members tm ON r.user_id = tm.user_id
        WHERE tm.team_id = ?
    """
    members = []
    async with db.conn.execute(query, (team_id,)) as cursor:
        async for row in cursor:
            members.append(f"{row[1]} (ID: {row[0]})")
    
    if not members:
        await message.answer("–í –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –ø–æ–∫–∞ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.")
        return
    
    text = f"–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã '{team['name']}':\n\n" + "\n".join(members)
    await message.answer(text)

@router.message(Command("users_without_team"))
async def users_without_team_handler(message: types.Message, db: AsyncDB):
    query = """
        SELECT r.user_id, r.name
        FROM registrations r
        LEFT JOIN teams_members tm ON r.user_id = tm.user_id
        WHERE tm.user_id IS NULL
    """
    users = []
    async with db.conn.execute(query) as cursor:
        async for row in cursor:
            users.append(f"{row[1]} (ID: {row[0]})")

    if not users:
        await message.answer("–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ —Å–æ—Å—Ç–æ—è—Ç –≤ –∫–æ–º–∞–Ω–¥–∞—Ö.")
        return

    text = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã:\n\n" + "\n".join(users)
    await message.answer(text)

@router.message(Command("mydata"))
async def cmd_mydata(message: types.Message, db: AsyncDB):
    user_id = message.from_user.id
    data = await db.get_registration(user_id)
    team = await db.get_user_team(user_id)

    if not data:
        await message.answer("–í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
        return

    text = (
        f"–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n"
        f"–§–ò–û: {data['name']}\n"
        f"–ì—Ä—É–ø–ø–∞: {data['group_name']}\n"
        f"–°—Ç–µ–∫: {data['stack']}\n"
    )
    if team:
        text += f"–í—ã —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–æ–º–∞–Ω–¥–µ: {team['name']}"
    else:
        text += "–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –Ω–∏ –≤ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ."

    await message.answer(text)
