from aiogram import Router, types
from aiogram.filters import Command
from services.db import AsyncDB
from handlers.admin_utils import ADMIN_IDS, get_admin_keyboard

router = Router()

@router.message(Command("adminpanel"))
async def admin_panel(message: types.Message, db: AsyncDB):
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
        return

    async with db.conn.execute("SELECT COUNT(*) FROM registrations") as cursor:
        total_users = (await cursor.fetchone())[0]

    async with db.conn.execute("SELECT COUNT(*) FROM teams") as cursor:
        total_teams = (await cursor.fetchone())[0]

    query = """
        SELECT COUNT(*) FROM registrations r
        LEFT JOIN teams_members tm ON r.user_id = tm.user_id
        WHERE tm.user_id IS NULL
    """
    async with db.conn.execute(query) as cursor:
        users_without_team = (await cursor.fetchone())[0]

    text = (
        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n\n"
        f"üë§ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
        f"üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥: {total_teams}\n"
        f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã: {users_without_team}"
    )
    kb = get_admin_keyboard()
    await message.answer(text, reply_markup=kb)
